//===== Alayne Scripts =======================================
//= Lonely Mountain Instance
//===== By: ================================================== 
//= Alayne
//===== Current Version: ===================================== 
//=
//= 1.0 - Creation
//= 1.1 - Structure modification, pattern apply by Emistry
//= 1.2 - Logical mods over stars for hercules support
//= 1.3 - Current version, handle both emu in one script
//=
//===== Compatible With: ===================================== 
//= rAthena SVN
//= hercules SVN
//===== Description: ========================================= 
//=
//= An instance based over Lonely Mountain from Bilbo the Hobbit
//=
//===== Todo Remaining: ======================================
//
//===== Additional Comments: =================================
//
//
//============================================================

yowi_town,205,184,5	script	Lonely Mountain Guardian::lmigua	10404,{

OnStart:
	.@party_id = getcharid(1);
	.@is_leader = ( getcharid(0) == getpartyleader(.@party_id,2) );
	.@has_instance = LMI_INSTANCE_ID > 0;
	
	.@lmi_instance_delay = ( instance_delay_mh - gettimetick(2) );

	mes "^0055FF[ "+.instance_name$+" ]^000000";
	mes "We're now recruiting people to Lonely Mountain and eliminate the Dragon that live there. Could you lend us a hand on this ?";
	mes " ";
	if( .@lmi_instance_delay > 0 )
	mes "You have to wait : ^FF0000"+.@lmi_instance_delay+" Seconds.^000000";
	next; 
	mes "^0055FF[ "+.instance_name$+" ]^000000";
	mes "I live here, near this mountain for a while.";
	mes "That's the first time I hear it howling this way...";
	mes "The Dragon must have awaken...Don't know why...";
	mes "Hope somebody will come to kill it and save our lives...";
	next;
	mes "^0055FF[ "+.instance_name$+" ]^000000";
	mes "What? You say it's because of you?!";
	mes "But that you gonna take your responsibilities?";
	mes "Well, it be the least to do, yeah!";
	mes "Because of you, hordes of monsters invaded the mountain.";
	mes "The Dragon won't be easy to reach, believe me!";
	next;
	switch( select( 
		( .@party_id && .@is_leader && !.@has_instance )?"Start Lonely Mountain":"",
		( .@party_id && .@has_instance )?"Enter Lonely Mountain":"",
		( .@party_id && .@is_leader && .@has_instance )?"Destroy Lonely Mountain":"",
	"Leave"
		)){
	case 1:
		getpartymember .@party_id,2;
		if( .min_party_member >= 1 ){
			.@origin = getcharid(3);
			.@gettimetick = gettimetick(2);
			for( .@i = 0; .@i < $@partymembercount; .@i++ )
				if( attachrid( $@partymemberaid[.@i] ) ){
					.@member_count++;
					if( BaseLevel < .base_level[0] || BaseLevel > .base_level[1] ) .@fail = .@fail|1;
					if( Zeny < .instance_zeny ) .@fail = .@fail|2;
					if( instance_delay_mh > .@gettimetick ) .@fail = .@fail|4;
					if( .@fail ){
						.@name$ = strcharinfo(0);
						break;
					}
			
				}
			attachrid( .@origin );
		}
		if( .@name$ != "" && .@fail ){
			mes "^FF0000[ Failed ]^000000";
			mes "^0055FF"+.@name$+"^000000, You cannot join right now.";
			mes " ";
			mes "^FF0000[ Reason: ]^000000";
			if( .@fail & 1 ) mes "^777777You must be Level: "+.base_level[0]+" - "+.base_level[1]+"^000000";
			if( .@fail & 2 ) mes "^777777You need "+ .instance_zeny +" Zeny^000000";
			if( .@fail & 4 ) mes "^777777You still have cooldown.^000000";
			break;
		}
		
		if( !instance_check_party( .@party_id,.min_party_member ) ){
			mes "^0055FF[ "+.instance_name$+" ]^000000";
			mes "Make or join a party with at least "+.min_party_member+" member and try again.";
			break;
		}
		else{
			$lmi_instance_level = select( 
				"^FF0000[ Cooldown - 24 Hours ]^000000 Easy Mode",
				"^FF0000[ Cooldown - 48 Hours ]^000000 Difficult Mode",
				"^FF0000[ Cooldown - 72 Hours ]^000000 Extreme Mode"
			);
			
			//HERCULES
			//.@instance = instance_create( .instance_name$,.@party_id );
			//RATHENA
			.@instance = instance_create( .instance_name$ );
			
			if( .@instance < 0 ) {
				npctalk "Lonely Mountain reservation failed.";
				mes "^0000FF"+.instance_name$+" ^000000- Reservation Failed!";
				close;
			}
			mes "^0000FF"+.instance_name$+" ^000000 - Reserved";
			//HERCULES
			//for( .@i = 0; .@i < .map_size; .@i++ )
			//	if( instance_attachmap( .map$[.@i],.@instance,1,"LonelyMountain" ) == "" ){
			//		npctalk "Lonely Mountain reservation failed.";
			//		mes "- ^FF0000Reservation Failed!^000000";
			//		instance_destroy( .@instance );
			//		close;
			//	}
			.@gettimetick = gettimetick(2);
			getpartymember .@party_id,2;
			for( .@i = 0; .@i < $@partymembercount; .@i++ )
				if( attachrid( $@partymemberaid[.@i] ) ){
					instance_delay_mh = ( .@gettimetick + ( .instance_delay * .@level ) );
					Zeny -= .instance_zeny;
					LMI_INSTANCE_ID = .@instance;
					dispbottom "["+.instance_name$+"] Paid "+ .instance_zeny +" Zeny and Instance Cooldown Applied.";
				}
			attachrid( .@origin );
			npctalk "Lonely Mountain has been generated for Party - "+getpartyname( .@party_id );
			$lmi_instance_key_drop = .seal_key[$lmi_instance_level-1];
		
			//HERCULES
			//instance_set_timeout .time_lmi_limit[0],.time_lmi_limit[1],.@instance;
			//instance_attach( .@instance );
			//instance_init( .@instance );
			next;
		}
	case 2:
		getmapxy(.@map$, .@x, .@y, UNITTYPE_PC);
		//HERCULES
		//savepoint .@map$, .@x, .@y;
		//if( has_instance( .map$[0] ) == "" ){
		//	mes .instance_name$ + " doesnt exist for Party - "+getpartyname( .@party_id );
		//}
		//else{
		//	warp .map$[0],178,63;
		//	instance_announce $lmi_instance, getpartyname(getcharid(1))+"  entered in the "+.instance_name$+"!",bc_map,"0x00ff99";
		//}
		
		//RATHENA
		save .@map$, .@x, .@y;
		switch(instance_enter(.instance_name$)) {
			default:
				mes "An unknown error has occurred.";
				close;
			case 2:
				mes "The memorial dungeon " + .instance_name$ + " does not exist.";
				mes "The party leader did not generate the dungeon yet.";
				close;
			case 1:
				mes "You can enter the dungeon after making the party.";
				close;
			case 0:
				instance_announce $lmi_instance, strcharinfo(0)+" from party, " +getpartyname( .@party_id )+", is entering the dungeon, "+.instance_name$+".",bc_map,"0x00ff99",FW_NORMAL,12;
				end;
		}
		break;
	case 3:
		mes "" + .instance_name$ + " Destroyed.";
		instance_destroy LMI_INSTANCE_ID;
		getpartymember getcharid(1),2;
		for( set .@i, 0; .@i < $@partymembercount; set .@i, .@i+1 )
			if( attachrid( $@partymemberaid[.@i] ) && LMI_INSTANCE_ID > 0){
				set LMI_INSTANCE_ID, -1;
			}
		break;
	default: 
		break;
}
close;

OnPCLoginEvent:
OnPCLogoutEvent:
	LMI_INSTANCE_ID = -1;
	end;

OnInit:
	setarray .base_level,90,250;
	setarray $time_lmi_limit,7200,300;
	setarray .map$,"1@lmi";
	.map_size = getarraysize( .map$ );
	.min_party_member = 1;
	.instance_zeny = 100000;
	.instance_delay = 7200;
	.instance_name$ = "Lonely Mountain";
	.item_id = 7876;
	.amount = 1;
	setarray .seal_key,15,10,5;
	end;
}

1@lmi,152,199,4	script	lonely_mountain	HIDDEN_WARP_NPC,2,2,{
end;

OnTouch:
	.@item_id = getvariableofnpc( .item_id,"lmigua" );
	delitem .@item_id,countitem( .@item_id );
	
	for( .@i = 0; .@i < 3; .@i++ )
		if( !getmapxy( .@map$,.@x,.@y,1,"tomb"+.@i ) )
			viewpoint 1,.@x,.@y,( .@i+1 ),0x0055FF;
	viewpoint 1,209,218,( .@i+1 ),0xFF0000;
	end;

OnInstanceInit:
	.@map$ = strnpcinfo(4);
	'lmi_sealed_tomb = 0;
	//HERCULES
	//setmapflag .@map$,mf_zone,"Memorial Dungeon";
	'lmi_boss_id = bg_monster( 0,.@map$,152,199,"Mountain Dragon",1719,instance_npcname( strnpcinfo(0), $lmi_instance )+"::OnDragonDead" );
	unitskilluseid 'lmi_boss_id,"NPC_INVINCIBLE",1;
	'lmi_final_reward = 150;

	for( .@i = 0; .@i < 3; .@i++ )
		donpcevent instance_npcname( "tomb"+.@i, $lmi_instance )+"::OnStart";
		
	//RATHENA
	initnpctimer;	
	end;
	
OnTimer1000:
	stopnpctimer;
	set .countTimerRound, .countTimerRound + 1;	
	//RATHENA delay
	if (.countTimerRound >= $time_lmi_limit[0])
	{
		stopnpctimer;
		instance_announce $lmi_instance,"[ Lonely Mountain ] : The dimension is collapsing. You should get out now!!",bc_map,0x00FF99;
		
		instance_destroy LMI_INSTANCE_ID;
		getpartymember getcharid(1),2;
		for( set .@i, 0; .@i < $@partymembercount; set .@i, .@i+1 )
			if( attachrid( $@partymemberaid[.@i] ) && LMI_INSTANCE_ID > 0){
				set LMI_INSTANCE_ID, -1;
			}
	}	
	else if(.countTimerRound % 300 == 0)
	{
		initnpctimer;
		'lmi_sealed_tomb = 0;
		instance_announce $lmi_instance,"[ Lonely Mountain ] : The Dragon howls! The Leaders are called back from the deads!!",bc_map,0x00FF99;
		sleep 3000;
		for( .@i = 0; .@i < 3; .@i++ )
			donpcevent instance_npcname( "tomb"+.@i, $lmi_instance )+"::OnStart";
		sleep 3000;
		unitskilluseid 'lmi_boss_id,"NPC_INVINCIBLE",1;
		instance_announce $lmi_instance,"[ Lonely Mountain ] : The Dragon back to Immortal State! Hurry UP, re-seal the Leaders !!",bc_map,0x00FF99;
	}
	initnpctimer;
	end;
	
OnSeal:
	if( 'lmi_sealed_tomb == (( 1 << 3 ) - 1) ){
		.@map$ = strnpcinfo(4);
		unitskilluseid 'lmi_boss_id,"NPC_INVINCIBLEOFF",1;
		instance_announce $lmi_instance,"[ Lonely Mountain ] : The Dragon is now vulnerable! It's now, or never!!",bc_map,0x00FF99;
		initnpctimer;
	}
	end;
	
OnDragonDead:
	stopnpctimer;
	.@map$ = strnpcinfo(4);
	killmonsterall .@map$;
	.@label$ = instance_npcname( strnpcinfo(0), $lmi_instance )+"::OnDragonDead";
	instance_announce $lmi_instance, "[ Lonely Mountain ] : The Dragon's dead! The Mountain is free again! Congratulation, take the Reward!",bc_map,0x00FF99;

	.@party_id = getcharid(1);
	.@reward = 'lmi_final_reward;
	if( .@party_id ){
		getpartymember .@party_id,2;
		for( .@pt = 0; .@pt < $@partymembercount; .@pt++ ){
			if( attachrid( $@partymemberaid[.@pt] ) ){
				callfunc("AddPoints", getcharid(3), .@reward);
				logmes "[Lonely Mountain] " + strcharinfo(0) + " complete the instance and obtains " + (.@reward) + " points.";	
				delitem getvariableofnpc( .item_id,"lmigua" ), countitem(getvariableofnpc( .item_id,"lmigua" ));
				dispbottom "[ Lonely Mountain ] : You have gained instance points for defeating the Lonely Mountain.";
				set #LONELYMOUNTAIN, #LONELYMOUNTAIN + 1;
			}
		}
		detachrid;
	}
	instance_announce $lmi_instance, "[ Lonely Mountain ] : Close in 30 seconds.",bc_map,"0x00FF99";
	sleep2 15000;
	instance_destroy LMI_INSTANCE_ID;
	getpartymember getcharid(1),2;
	for( set .@i, 0; .@i < $@partymembercount; set .@i, .@i+1 )
		if( attachrid( $@partymemberaid[.@i] ) && LMI_INSTANCE_ID > 0){
			set LMI_INSTANCE_ID, -1;
		}
	end;
}

1@lmi,64,184,4	script	Tomb#0::tomb0	4_SOIL,{
function	summon_mob;

.@mob_name$ = "Goblin Leader";
mes "^0055FF[ "+.@mob_name$+" Tomb ]^000000";
mes "This tomb belong to the "+.@mob_name$+"! The army of goblin will not stop here as long as the Tomb is not sealed yet!";
next;
if( select( "Seal the Tomb","Cancel" ) == 1 ){
	.@item_id = getvariableofnpc( .item_id,"lmigua" );
	.@amount = getvariableofnpc( .amount,"lmigua" );
	.@npc_num = ( 1 << atoi( strnpcinfo(2)) );
	if( 'lmi_sealed_tomb & .@npc_num ){
		mes "This tomb has been sealed. Temporary Goblin wont be coming back.";
	}
	else if( countitem( .@item_id  ) < .@amount ){
		mes "You'll need ^FF0000"+.@amount+"x "+getitemname( .@item_id )+"^000000";
	}
	else{
		stopnpctimer;
		mes "You activated the Stone Seal upon the "+.@mob_name$;
		delitem .@item_id,.@amount;
		'lmi_sealed_tomb = 'lmi_sealed_tomb + .@npc_num;
		donpcevent instance_npcname( "lonely_mountain", $lmi_instance )+"::OnSeal";
	}
}
close;

OnTimer30000:
OnStart:
	.@map$ = strnpcinfo(4);
	.@npc_name$ = instance_npcname( "tomb0", $lmi_instance );
	summon_mob(
		.@map$,.@npc_name$,
		1538,15,
		1258,5,
		1392,3,
		1280,3,
		1308,5,
		1880,15
	);
	hideonnpc .@npc_name$;
	.@npc_num = ( 1 << atoi( strnpcinfo(2)) );
	if( 'lmi_sealed_tomb & .@npc_num )
		'lmi_sealed_tomb = 'lmi_sealed_tomb - .@npc_num;
	end;

OnMyMobDead:
	.@map$ = strnpcinfo(4);
	.@npc_name$ = instance_npcname( "tomb0", $lmi_instance );

	.@mob_dead_num = mobcount( .@map$,.@npc_name$+"::OnMyMobDead" );
	if( rand( 100 ) < $lmi_instance_key_drop )
		rentitem 7876,600;
	if( .@mob_dead_num < 5 || .@mob_dead_num % 5 == 0 )
		instance_announce $lmi_instance, "[ Lonely Mountain ] : Goblin Left: "+.@mob_dead_num+" | Leader : "+mobcount( .@map$,.@npc_name$+"::OnMyBossDead" ),bc_map,0x00FF99;
	end;

OnMyBossDead:
	.@map$ = strnpcinfo(4);
	.@npc_name$ = instance_npcname( "tomb0", $lmi_instance );
	killmonster .@map$, .@npc_name$ + "::OnMyMobDead";
	hideoffnpc .@npc_name$;
	initnpctimer;
	instance_announce $lmi_instance, "[ Lonely Mountain ] : Goblin Leader died, you have 30 seconds to Seal it!!",bc_map,0x00FF99;
	end;

function	summon_mob	{
	
	.@map$ = getarg(0);
	.@npc_name$ = instance_npcname( "tomb0", $lmi_instance );
	.@arg_count = getargcount() - 1;
	
	instance_announce $lmi_instance,"[ Lonely Mountain ] : Dragon Howl!!! Goblin army has returned, the Seal is not locked yet!",bc_map,0x00FF99;
	setarray .@coordinate,150,93,174,78;
	instance_announce $lmi_instance,"[ Lonely Mountain ] : Goblin army has returned, the Seal is not locked yet!",bc_map,0x00FF99;
	for( .@i = 2; .@i < .@arg_count; .@i += 2 ){
		.@target_amount = ( getarg( .@i+1 ) * $lmi_instance_level );
		areamonster .@map$,.@coordinate[0],.@coordinate[1],.@coordinate[2],.@coordinate[3],"--ja--",getarg( .@i ),.@target_amount,.@npc_name$+"::OnMyMobDead";
	}
	if( mobcount( .@map$,.@npc_name$+"::OnMyBossDead" ) == 0 )
	{
		areamonster .@map$,.@coordinate[0],.@coordinate[1],.@coordinate[2],.@coordinate[3],"Goblin Leader",1299,1,.@npc_name$+"::OnMyBossDead";
	}
	return;
	}
}

1@lmi,148,282,4	script	Tomb#1::tomb1	4_SOIL,{
function	summon_mob;

.@mob_name$ = "Kobold Leader";
mes "^0055FF[ "+.@mob_name$+" Tomb ]^000000";
mes "This tomb belong to the "+.@mob_name$+"! The army of Kobold will not stop here as long as the Tomb is not sealed yet!";
next;
if( select( "Seal the Tomb","Cancel" ) == 1 ){
	.@item_id = getvariableofnpc( .item_id,"lmigua" );
	.@amount = getvariableofnpc( .amount,"lmigua" );
	.@npc_num = ( 1 << atoi( strnpcinfo(2)) );
	if( 'lmi_sealed_tomb & .@npc_num ){
		mes "This tomb has been sealed. Temporary Kobold wont be coming back.";
	}
	else if( countitem( .@item_id  ) < .@amount ){
		mes "You'll need ^FF0000"+.@amount+"x "+getitemname( .@item_id )+"^000000";
	}
	else{
		stopnpctimer;
		mes "You activated the Stone Seal upon the "+.@mob_name$;
		delitem .@item_id,.@amount;
		'lmi_sealed_tomb = 'lmi_sealed_tomb + .@npc_num;
		donpcevent instance_npcname( "lonely_mountain", $lmi_instance )+"::OnSeal";
	}
}
close;

OnTimer30000:
OnStart:
	.@map$ = strnpcinfo(4);
	.@npc_name$ = instance_npcname( "tomb1", $lmi_instance );
	summon_mob( 
		.@map$,.@npc_name$,
		1135,15,
		1455,5,
		1134,2,
		1133,2
	);
	hideonnpc .@npc_name$;
	.@npc_num = ( 1 << atoi( strnpcinfo(2)) );
	if( 'lmi_sealed_tomb & .@npc_num )
		'lmi_sealed_tomb = 'lmi_sealed_tomb - .@npc_num;
	end;

OnMyMobDead:
	.@map$ = strnpcinfo(4);
	.@npc_name$ = instance_npcname( "tomb1", $lmi_instance );
	.@mob_dead_num = mobcount( .@map$,.@npc_name$+"::OnMyMobDead" );
	
	if( rand( 100 ) < $lmi_instance_key_drop )
		rentitem 7876,600;
	if( .@mob_dead_num < 5 || .@mob_dead_num % 5 == 0 )
		instance_announce $lmi_instance, "[ Lonely Mountain ] : Kobold Left: "+.@mob_dead_num+" | Leader : "+mobcount( .@map$,.@npc_name$+"::OnMyBossDead" ),bc_map,0x00FF99;
	end;

OnMyBossDead:
	.@map$ = strnpcinfo(4);
	.@npc_name$ = instance_npcname( "tomb1", $lmi_instance );
	killmonster .@map$, .@npc_name$ + "::OnMyMobDead";
	hideoffnpc .@npc_name$;
	initnpctimer;
	instance_announce $lmi_instance, "[ Lonely Mountain ] : Kobold Leader died, you have  30 seconds to Seal it!!",bc_map,0x00FF99;
	end;

function	summon_mob	{
	.@map$ = getarg(0);
	.@npc_name$ = instance_npcname( "tomb1", $lmi_instance );
	.@arg_count = getargcount() - 1;
	
	instance_announce $lmi_instance,"[ Lonely Mountain ] : Dragon Howl!!! Kobold army has returned, the Seal is not locked yet!",bc_map,0x00FF99;
	setarray .@coordinate,94,178,127,146;
	instance_announce $lmi_instance,"[ Lonely Mountain ] : Kobold army has returned, the Seal is not locked yet!",bc_map,0x00FF99;
	for( .@i = 2; .@i < .@arg_count; .@i += 2 ){
		.@target_amount = ( getarg( .@i+1 ) * $lmi_instance_level );
		areamonster .@map$,.@coordinate[0],.@coordinate[1],.@coordinate[2],.@coordinate[3],"--ja--",getarg( .@i ),.@target_amount,.@npc_name$+"::OnMyMobDead";
	}
	if( mobcount( .@map$,.@npc_name$+"::OnMyBossDead" )  == 0 )
	{
		areamonster .@map$,.@coordinate[0],.@coordinate[1],.@coordinate[2],.@coordinate[3],"Kobold Leader",1296,1,.@npc_name$+"::OnMyBossDead";
	}
	return;
	}
}

1@lmi,206,123,4	script	Tomb#2::tomb2	4_SOIL,{
function	summon_mob;

.@mob_name$ = "Orc Hero";
mes "^0055FF[ "+.@mob_name$+" Tomb ]^000000";
mes "This tomb belong to the "+.@mob_name$+"! The army of Orc will not stop here as long as the Tomb is not sealed yet!";
next;
if( select( "Seal the Tomb","Cancel" ) == 1 ){
	.@item_id = getvariableofnpc( .item_id,"lmigua" );
	.@amount = getvariableofnpc( .amount,"lmigua" );
	.@npc_num = ( 1 << atoi( strnpcinfo(2)) );
	if( 'lmi_sealed_tomb & .@npc_num ){
		mes "This tomb has been sealed. Temporary Orc wont be coming back.";
	}
	else if( countitem( .@item_id  ) < .@amount ){
		mes "You'll need ^FF0000"+.@amount+"x "+getitemname( .@item_id )+"^000000";
	}
	else{
		stopnpctimer;
		mes "You activated the Stone Seal upon the "+.@mob_name$;
		delitem .@item_id,.@amount;
		'lmi_sealed_tomb = 'lmi_sealed_tomb + .@npc_num;
		donpcevent instance_npcname( "lonely_mountain", $lmi_instance )+"::OnSeal";
	}
}
close;
	
OnTimer30000:
OnStart:
	.@map$ = strnpcinfo(4);
	.@npc_name$ = instance_npcname( "tomb2" );
	summon_mob( 
		.@map$,.@npc_name$,
		1023,15,
		1189,5,
		1152,2,
		1177,15,
		1213,20,
		1686,5
	);
	hideonnpc .@npc_name$;
	.@npc_num = ( 1 << atoi( strnpcinfo(2)) );
	if( 'lmi_sealed_tomb & .@npc_num )
		'lmi_sealed_tomb = 'lmi_sealed_tomb - .@npc_num;
	end;

OnMyMobDead:
	.@map$ = strnpcinfo(4);
	.@npc_name$ = instance_npcname( "tomb2" );
	.@mob_dead_num = mobcount( .@map$,.@npc_name$+"::OnMyMobDead" );
	
	if( rand( 100 ) < $lmi_instance_key_drop )
		rentitem 7876,600;
	if( .@mob_dead_num < 5 || .@mob_dead_num % 5 == 0 )
		instance_announce $lmi_instance, "[ Lonely Mountain ] : Orc Left: "+.@mob_dead_num+" | Leader : "+mobcount( .@map$,.@npc_name$+"::OnMyBossDead" ),bc_map,0x00FF99;
	end;

OnMyBossDead:
	.@map$ = strnpcinfo(4);
	.@npc_name$ = instance_npcname( "tomb2" );
	killmonster .@map$, .@npc_name$ + "::OnMyMobDead";
	hideoffnpc .@npc_name$;
	initnpctimer;
	instance_announce $lmi_instance, "[ Lonely Mountain ] : Orc Leader died, you have 30 seconds to Seal it!!",bc_map,0x00FF99;
	end;

function	summon_mob	{
	.@map$ = getarg(0);
	.@npc_name$ = instance_npcname( "tomb2" );
	.@arg_count = getargcount() - 1;

	instance_announce $lmi_instance,"[ Lonely Mountain ] : Dragon Howl!!! Orc army has returned, the Seal is not locked yet!",bc_map,0x00FF99;
	setarray .@coordinate,105,261,142,240;
	instance_announce $lmi_instance,"[ Lonely Mountain ] : Orc army has returned, the Seal is not locked yet!",bc_map,0x00FF99;
	for( .@i = 2; .@i < .@arg_count; .@i += 2 ){
		.@target_amount = ( getarg( .@i+1 ) * $lmi_instance_level );
		areamonster .@map$,.@coordinate[0],.@coordinate[1],.@coordinate[2],.@coordinate[3],"--ja--",getarg( .@i ),.@target_amount,.@npc_name$+"::OnMyMobDead";
	}
	if( mobcount( .@map$,.@npc_name$+"::OnMyBossDead" ) == 0 )
		areamonster .@map$,.@coordinate[0],.@coordinate[1],.@coordinate[2],.@coordinate[3],"Orc Leader",1087,1,.@npc_name$+"::OnMyBossDead";
	return;
	}
}
